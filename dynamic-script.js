{
  "functionName": "extractConnections",
  "logStart": "üîç Iniciando extra√ß√£o de conex√µes no LinkedIn...",
  "connectionsArray": "let linkedinConnections = [];",
  "cardSelector": "document.querySelectorAll(\".mn-connection-card\").forEach(card => {",
  "nameElementSelector": "const nameElement = card.querySelector(\".mn-connection-card__name\");",
  "linkElementSelector": "const linkElement = card.querySelector(\"a[href*='/in/']\");",
  "jobElementSelector": "const jobElement = card.querySelector(\".mn-connection-card__occupation\");",
  "nameExtraction": "const name = nameElement ? nameElement.innerText.trim() : \"Sem nome\";",
  "profileUrlExtraction": "const profileurl = linkElement ? `https://www.linkedin.com${linkElement.getAttribute(\"href\").split(\"?\")[0]}` : \"Sem URL\";",
  "jobTitleExtraction": "const jobtitle = jobElement ? jobElement.innerText.trim() : \"N/A\";",
  "duplicateCheck": "if (!linkedinConnections.some(conn => conn.profileurl === profileurl)) {",
  "connectionPush": "linkedinConnections.push({ name, jobtitle, profileurl });",
  "connectionPushEnd": "}",
  "cardSelectorEnd": "});",
  "dataCheck": "if (linkedinConnections.length > 0) {",
  "logExtractedConnections": "console.log(\"üìå Conex√µes extra√≠das:\", linkedinConnections);",
  "sendMessageToPopup": "chrome.runtime.sendMessage({ action: \"scrapedData\", data: linkedinConnections })",
  "sendMessageSuccessLog": ".then(() => console.log(\"üì§ Dados enviados ao popup com sucesso!\"))",
  "sendMessageErrorLog": ".catch(err => console.error(\"‚ùå Erro ao enviar os dados:\", err));",
  "dataCheckEnd": "} else {",
  "noConnectionsFoundLog": "console.log(\"‚ö†Ô∏è Nenhuma conex√£o encontrada.\");",
  "functionEnd": "}"
}
